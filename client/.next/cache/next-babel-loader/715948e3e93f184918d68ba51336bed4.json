{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/code/pages/list.js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn } from './component/dbComponent';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getHead();\n\n            case 2:\n              _context.next = 4;\n              return _this.reloadComponent();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadComponent\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var sql, value;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sql = \"SELECT * FROM employee as em\\n                     LEFT JOIN del_temp as del \\n                     ON del.table_name = employee\\n                     AND del.target_id = em.id\\n                     WHRE target_id IS NULL;\";\n              _context2.next = 3;\n              return RawQuery(sql);\n\n            case 3:\n              value = _context2.sent;\n              return _context2.abrupt(\"return\", _this.setState({\n                listItem: value\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getHead\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var colName;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return TableColumn(\"employee\");\n\n            case 2:\n              colName = _context3.sent;\n              return _context3.abrupt(\"return\", _this.setState({\n                listHead: colName\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _this.state = {\n      listHead: [],\n      listItem: []\n    };\n    _this.reloadComponent = _this.reloadComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/index\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"home\"))), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"list\"))), __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/requestlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"request list\")))), __jsx(TableList, {\n        listHead: this.state.listHead,\n        listItem: this.state.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };\n\nvar TableList = function TableList(props) {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.listHead.map(function (head, index) {\n    return __jsx(\"th\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, head);\n  }))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.listItem.map(function (list, index) {\n    return __jsx(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, props.listHead.map(function (colHead, index_head) {\n      return __jsx(\"td\", {\n        key: index_head,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, list[colHead]);\n    }));\n  })));\n};","map":{"version":3,"sources":["/code/pages/list.js"],"names":["Link","React","Component","useRef","RawQuery","TableColumn","List","getHead","reloadComponent","sql","value","setState","listItem","colName","listHead","state","bind","TableList","props","map","head","index","list","colHead","index_head"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery,TableColumn } from './component/dbComponent';\n\n\nexport default class List extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_temp as del \n                     ON del.table_name = employee\n                     AND del.target_id = em.id\n                     WHRE target_id IS NULL;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <nav>\n                    <li><Link href=\"/index\"><a>home</a></Link></li>\n                    <li><Link href=\"/list\"><a>list</a></Link></li>\n                    <li><Link href=\"/requestlist\"><a>request list</a></Link></li>\n                </nav>\n                <TableList listHead={this.state.listHead} listItem={this.state.listItem} />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                {props.listHead.map((head,index) => <th key={index}>{head}</th>)}\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((list,index) => \n                    <tr key={index}>\n                        {props.listHead.map((colHead,index_head) => <td key={index_head}>{list[colHead]}</td>)}\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}"]},"metadata":{},"sourceType":"module"}