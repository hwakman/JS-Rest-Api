{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/code/pages/requestlist.js\",\n    _this2 = this;\n\nvar __jsx = React.createElement;\nimport Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn } from './component/dbComponent';\n\nvar RequestList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RequestList, _Component);\n\n  function RequestList() {\n    var _this;\n\n    _classCallCheck(this, RequestList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequestList).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getHead();\n\n            case 2:\n              _context.next = 4;\n              return _this.reloadComponent();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"reloadComponent\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var sql, value;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sql = \"SELECT * FROM employee as em\\n                     LEFT JOIN del_tmp as del \\n                     ON del.table_name = 'employee'\\n                     AND del.target_id = em.id\\n                     WHERE target_id IS NOT NULL;\";\n              _context2.next = 3;\n              return RawQuery(sql);\n\n            case 3:\n              value = _context2.sent;\n              return _context2.abrupt(\"return\", _this.setState({\n                listItem: value\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getApprove\",\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(target) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(target, 'Approve');\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getReject\",\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(target) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getHead\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var colName;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return TableColumn(\"employee\");\n\n            case 2:\n              colName = _context5.sent;\n              return _context5.abrupt(\"return\", _this.setState({\n                listHead: colName\n              }));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _this.state = {\n      listHead: [],\n      listItem: []\n    };\n    _this.reloadComponent = _this.reloadComponent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RequestList, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(Round, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), __jsx(TableList, {\n        listItem: this.state.listItem,\n        getApprove: this.getApprove,\n        getReject: this.getReject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RequestList;\n}(Component);\n\nexport { RequestList as default };\n\nvar TableList = function TableList(props) {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"name\"), __jsx(\"th\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"action\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.listItem.map(function (value, index) {\n    return __jsx(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, value.name), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: props.getApprove.bind(_this2, value.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Approve\"), __jsx(\"button\", {\n      onClick: props.getReject.bind(_this2, value.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Reject\")));\n  })));\n};","map":{"version":3,"sources":["/code/pages/requestlist.js"],"names":["Round","React","Component","useRef","RawQuery","TableColumn","RequestList","getHead","reloadComponent","sql","value","setState","listItem","target","console","log","colName","listHead","state","bind","getApprove","getReject","TableList","props","map","index","name","id"],"mappings":"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","sourcesContent":["import Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery,TableColumn } from './component/dbComponent';\n\n\nexport default class RequestList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     WHERE target_id IS NOT NULL;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getApprove = async (target) => {\n        console.log(target,'Approve');\n    }\n\n    getReject = async (target) => {\n        // console.log(target,'Reject');\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Round />\n                <TableList \n                    listItem={this.state.listItem}\n                    getApprove={this.getApprove}\n                    getReject={this.getReject}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                    <th>name</th>\n                    <th colSpan=\"2\">action</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((value,index) => \n                    <tr key={index}>\n                        <td>{value.name}</td>\n                        <td>\n                            <button onClick={props.getApprove.bind(this,value.id)}>Approve</button>\n                            <button onClick={props.getReject.bind(this,value.id)}>Reject</button>\n                        </td>\n                    </tr>    \n                )}\n            </tbody>\n        </table>\n    );\n}"]},"metadata":{},"sourceType":"module"}