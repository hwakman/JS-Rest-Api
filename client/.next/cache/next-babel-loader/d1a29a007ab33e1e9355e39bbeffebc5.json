{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/code/pages/list.js\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn } from './component/dbComponent';\nexport default class List extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      await this.getHead();\n      await this.reloadComponent();\n    });\n\n    _defineProperty(this, \"reloadComponent\", async () => {\n      const sql = `SELECT * FROM employee;`;\n      const value = await RawQuery(sql);\n      return this.setState({\n        listItem: value\n      });\n    });\n\n    _defineProperty(this, \"getHead\", async () => {\n      const colName = await TableColumn(`employee`);\n      return this.setState({\n        listHead: colName\n      });\n    });\n\n    this.state = {\n      listHead: [],\n      listItem: []\n    };\n    this.reloadComponent = this.reloadComponent.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"home\"))), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"list\"))), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/requestlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"request list\")))), __jsx(TableList, {\n      listHead: this.state.listHead,\n      listItem: this.state.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst TableList = props => {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.listHead.map((head, index) => __jsx(\"th\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, head)))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.listItem.map((list, index) => __jsx(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.listHead.map((colHead, index_head) => __jsx(\"td\", {\n    key: index_head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, list.colHead))))));\n};","map":{"version":3,"sources":["/code/pages/list.js"],"names":["Link","React","Component","useRef","RawQuery","TableColumn","List","constructor","getHead","reloadComponent","sql","value","setState","listItem","colName","listHead","state","bind","render","TableList","props","map","head","index","list","colHead","index_head"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery,TableColumn } from './component/dbComponent';\n\n\nexport default class List extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <nav>\n                    <li><Link href=\"/index\"><a>home</a></Link></li>\n                    <li><Link href=\"/list\"><a>list</a></Link></li>\n                    <li><Link href=\"/requestlist\"><a>request list</a></Link></li>\n                </nav>\n                <TableList listHead={this.state.listHead} listItem={this.state.listItem} />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                {props.listHead.map((head,index) => <th key={index}>{head}</th>)}\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((list,index) => \n                    <tr key={index}>\n                        {\n                            props.listHead.map((colHead,index_head) => \n                                <td key={index_head}>{list.colHead}</td>\n                            )\n                        }\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}"]},"metadata":{},"sourceType":"module"}