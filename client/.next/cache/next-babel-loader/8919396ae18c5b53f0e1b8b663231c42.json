{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nvar url = 'http://localhost:8080/api'; // Query with raw sql\n\nexport var RawQuery =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(sql) {\n    var Query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!sql) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return Axios.post(\"\".concat(url, \"/rawQuery\"), {\n              sql: sql\n            });\n\n          case 3:\n            Query = _context.sent;\n            return _context.abrupt(\"return\", Query.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function RawQuery(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // Select all column on table\n\nexport var GetAll = function GetAll(table) {\n  if (table) {\n    Axios.post(\"\".concat(url, \"/getAll\"), {\n      table: table\n    }).then(function (res) {\n      return res.data;\n    })[\"catch\"](function (err) {\n      return err;\n    });\n  }\n}; // Inser single row to table\n\nexport var AddOne = function AddOne(table, data) {\n  if (table && data) {\n    Axios.post(\"\".concat(url, \"/addOne\"), {\n      table: table,\n      data: data\n    }).then(function (res) {\n      console.log(res);\n    });\n  }\n}; // Set request to remove data\n\nexport var TmpDel = function TmpDel(table, data) {\n  if (table && data) {\n    Axios.post(\"\".concat(url, \"/tmpDel\"), {\n      table: table,\n      data: data\n    }).then(function (res) {\n      console.log(res);\n    });\n  }\n}; // Select column name form tartget table\n\nexport var TableColumn = function TableColumn(table) {\n  if (table) {\n    Axios.post(\"\".concat(url, \"/TableColumn\"), {\n      table: table\n    }).then(function (res) {\n      console.log(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["/code/pages/component/dbComponent.js"],"names":["Axios","url","RawQuery","sql","post","Query","data","GetAll","table","then","res","err","AddOne","console","log","TmpDel","TableColumn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,2BAAZ,C,CAEA;;AACA,OAAO,IAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACjBA,GADiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEIH,KAAK,CAACI,IAAN,WAAcH,GAAd,gBAA6B;AAACE,cAAAA,GAAG,EAAHA;AAAD,aAA7B,CAFJ;;AAAA;AAEVE,YAAAA,KAFU;AAAA,6CAGTA,KAAK,CAACC,IAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARJ,QAAQ;AAAA;AAAA;AAAA,GAAd,C,CAaP;;AACA,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAC3B,MAAGA,KAAH,EAAU;AACNR,IAAAA,KAAK,CAACI,IAAN,WAAcH,GAAd,cAA2B;AAACO,MAAAA,KAAK,EAALA;AAAD,KAA3B,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AAAC,aAAOA,GAAG,CAACJ,IAAX;AAAiB,KAD/B,WAEQ,UAAAK,GAAG,EAAI;AAAC,aAAOA,GAAP;AAAY,KAF5B;AAGH;AACJ,CANM,C,CAQP;;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACJ,KAAD,EAAOF,IAAP,EAAgB;AAClC,MAAIE,KAAK,IAAIF,IAAb,EAAmB;AACfN,IAAAA,KAAK,CAACI,IAAN,WAAcH,GAAd,cAA2B;AAACO,MAAAA,KAAK,EAALA,KAAD;AAAOF,MAAAA,IAAI,EAAJA;AAAP,KAA3B,EACCG,IADD,CACM,UAAAC,GAAG,EAAI;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAAkB,KADhC;AAEH;AACJ,CALM,C,CAOP;;AACA,OAAO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACP,KAAD,EAAOF,IAAP,EAAgB;AAClC,MAAIE,KAAK,IAAIF,IAAb,EAAmB;AACfN,IAAAA,KAAK,CAACI,IAAN,WAAcH,GAAd,cAA2B;AAACO,MAAAA,KAAK,EAALA,KAAD;AAAOF,MAAAA,IAAI,EAAJA;AAAP,KAA3B,EACCG,IADD,CACM,UAAAC,GAAG,EAAI;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAAkB,KADhC;AAEH;AACJ,CALM,C,CAOP;;AACA,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACR,KAAD,EAAW;AAClC,MAAGA,KAAH,EAAU;AACNR,IAAAA,KAAK,CAACI,IAAN,WAAcH,GAAd,mBAAgC;AAACO,MAAAA,KAAK,EAALA;AAAD,KAAhC,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACJ,IAAhB;AAAuB,KADrC,WAEO,UAAAK,GAAG;AAAA,aAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAJ;AAAA,KAFV;AAGH;AACJ,CANM","sourcesContent":["import Axios from 'axios';\n\nconst url = 'http://localhost:8080/api';\n\n// Query with raw sql\nexport const RawQuery = async (sql) => {\n    if(sql) {\n        const Query = await Axios.post(`${url}/rawQuery`,{sql});\n        return Query.data;\n\n        // Axios.post(`${url}/rawQuery`,{sql})\n        // .then(res => {\n        //     console.log(res.data);\n        // })\n        // .catch(err => {return err;});\n    }\n}\n\n// Select all column on table\nexport const GetAll = table => {\n    if(table) {\n        Axios.post(`${url}/getAll`,{table})\n        .then(res => {return res.data;}\n        ).catch(err => {return err;});\n    }\n}\n\n// Inser single row to table\nexport const AddOne = (table,data) => {\n    if (table && data) {\n        Axios.post(`${url}/addOne`,{table,data})\n        .then(res => {console.log(res);});\n    }\n}\n\n// Set request to remove data\nexport const TmpDel = (table,data) => {\n    if (table && data) {\n        Axios.post(`${url}/tmpDel`,{table,data})\n        .then(res => {console.log(res);});\n    }\n}\n\n// Select column name form tartget table\nexport const TableColumn = (table) => {\n    if(table) {\n        Axios.post(`${url}/TableColumn`,{table})\n        .then(res => {console.log(res.data);})\n        .catch(err => console.log(err));\n    }\n}"]},"metadata":{},"sourceType":"module"}