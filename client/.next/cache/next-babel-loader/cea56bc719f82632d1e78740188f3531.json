{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/code/pages/list.js\";\nvar __jsx = React.createElement;\nimport Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn } from './component/dbComponent';\nexport default class List extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      await this.getHead();\n      await this.reloadComponent();\n    });\n\n    _defineProperty(this, \"reloadComponent\", async () => {\n      const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     LEFT JOIN department as dep\n                     ON em.dep_no = dep.dep_id\n                     WHERE target_id IS NULL;`;\n      const value = await RawQuery(sql);\n      return this.setState({\n        listItem: value\n      });\n    });\n\n    _defineProperty(this, \"getHead\", async () => {\n      const colName = await TableColumn(`employee`);\n      return this.setState({\n        listHead: colName\n      });\n    });\n\n    this.state = {\n      listHead: [],\n      listItem: []\n    };\n    this.reloadComponent = this.reloadComponent.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(Round, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(TableList, {\n      listHead: this.state.listHead,\n      listItem: this.state.listItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst TableList = props => {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"id\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"department\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.listItem.map((list, index) => __jsx(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, list.id), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, list.name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, list.dep_name)))));\n};","map":{"version":3,"sources":["/code/pages/list.js"],"names":["Round","React","Component","useRef","RawQuery","TableColumn","List","constructor","getHead","reloadComponent","sql","value","setState","listItem","colName","listHead","state","bind","render","TableList","props","map","list","index","id","name","dep_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAkBC,WAAlB,QAAqC,yBAArC;AAGA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAExCK,EAAAA,WAAW,GAAG;AACV;;AADU,+CASM,YAAY;AAC5B,YAAM,KAAKC,OAAL,EAAN;AACA,YAAM,KAAKC,eAAL,EAAN;AACH,KAZa;;AAAA,6CAcI,YAAY;AAC1B,YAAMC,GAAG,GAAI;;;;;;8CAAb;AAOA,YAAMC,KAAK,GAAG,MAAMP,QAAQ,CAACM,GAAD,CAA5B;AACA,aAAO,KAAKE,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAACF;AAAV,OAAd,CAAP;AACH,KAxBa;;AAAA,qCA0BJ,YAAY;AAClB,YAAMG,OAAO,GAAG,MAAMT,WAAW,CAAE,UAAF,CAAjC;AACA,aAAO,KAAKO,QAAL,CAAc;AAACG,QAAAA,QAAQ,EAACD;AAAV,OAAd,CAAP;AACH,KA7Ba;;AAEV,SAAKE,KAAL,GAAa;AACTD,MAAAA,QAAQ,EAAE,EADD;AAETF,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIA,SAAKJ,eAAL,GAAuB,KAAKA,eAAL,CAAqBQ,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAwBDC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,SAAD;AAAW,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWD,QAAhC;AAA0C,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWH,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAxCuC;;AA2C5C,MAAMM,SAAS,GAAGC,KAAK,IAAI;AACvB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACP,QAAN,CAAeQ,GAAf,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAChB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAI,CAACE,EAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAI,CAACG,IAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,IAAI,CAACI,QAAV,CAHJ,CADH,CADL,CATJ,CADJ;AAqBH,CAtBD","sourcesContent":["import Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery,TableColumn } from './component/dbComponent';\n\n\nexport default class List extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     LEFT JOIN department as dep\n                     ON em.dep_no = dep.dep_id\n                     WHERE target_id IS NULL;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Round />\n                <TableList listHead={this.state.listHead} listItem={this.state.listItem} />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                    <th>id</th>\n                    <th>name</th>\n                    <th>department</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((list,index) => \n                    <tr key={index}>\n                        <td>{list.id}</td>\n                        <td>{list.name}</td>\n                        <td>{list.dep_name}</td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}"]},"metadata":{},"sourceType":"module"}