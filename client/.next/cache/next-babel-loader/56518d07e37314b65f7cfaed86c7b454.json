{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/code/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useRef } from 'react';\nimport { AddOne, TmpDel } from './component/dbComponent';\nimport Round from './component/roundLink';\nimport Axios from 'axios';\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"setValue\", async data => {\n      try {\n        await AddOne(`employee`, data);\n        await alert(`member name \"${data.name}\" has added.`);\n        await Axios.get('http://localhost:8080/').then(res => {\n          this.setState({\n            indexData: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (err) {\n        alert(err);\n      }\n    });\n\n    _defineProperty(this, \"editVal\", async (table, target) => {});\n\n    _defineProperty(this, \"delValue\", async (table, target) => {\n      try {\n        await TmpDel(table, target);\n        await alert(`Wating for approve.`);\n        await Axios.get('http://localhost:8080/').then(res => {\n          this.setState({\n            indexData: res.data\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      } catch (err) {\n        alert(err);\n      }\n    });\n\n    this.state = {\n      indexData: []\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('http://localhost:8080/').then(res => {\n      this.setState({\n        indexData: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Round, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(InputForm, {\n      value: this.setValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(TableComp, {\n      data: this.state.indexData,\n      delValue: this.delValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst TableComp = props => {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"no.\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"role\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"name\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"status\"), __jsx(\"th\", {\n    col: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"action\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.data.map((res, index) => __jsx(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, index + 1), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, res.dep_name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, res.name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, res.target_id ? __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Request To Remove\") : `available`), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, res.target_id ? __jsx(\"button\", {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"edit\") : __jsx(\"button\", {\n    onClick: props.delValue.bind(this, `employee`, res.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"edit\")), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, res.target_id ? __jsx(\"button\", {\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"delete\") : __jsx(\"button\", {\n    onClick: props.delValue.bind(this, `employee`, res.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"delete\"))))));\n};\n\nconst InputForm = props => {\n  const roleRef = new useRef(null);\n  const nameRef = new useRef(null);\n\n  const collectVal = async () => {\n    const dep_no = roleRef.current.value;\n    const name = nameRef.current.value;\n\n    if (name) {\n      await props.value({\n        name,\n        dep_no\n      });\n      nameRef.current.value = '';\n    }\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"input\", {\n    ref: nameRef,\n    type: `text`,\n    placeholder: `name`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"select\", {\n    ref: roleRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Manager\"), __jsx(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Helpdesk\")), __jsx(\"input\", {\n    type: `submit`,\n    onClick: collectVal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/code/pages/index.js"],"names":["React","Component","useRef","AddOne","TmpDel","Round","Axios","App","constructor","data","alert","name","get","then","res","setState","indexData","catch","err","console","log","table","target","state","componentDidMount","render","setValue","delValue","TableComp","props","map","index","dep_name","target_id","bind","id","InputForm","roleRef","nameRef","collectVal","dep_no","current","value"],"mappings":"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","sourcesContent":["import React, { Component, useRef } from 'react';\nimport { AddOne, TmpDel } from './component/dbComponent';\nimport Round from './component/roundLink';\nimport Axios from 'axios';\n\nexport default class App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            indexData: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});}\n        ).catch(err => {console.log(err);});\n    }\n\n    setValue = async (data) => {\n        try {\n            await AddOne(`employee`,data);\n            await alert(`member name \"${data.name}\" has added.`);\n            await Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});}\n            ).catch(err => {console.log(err);});\n        }catch (err){\n            alert(err);\n        }\n    }\n\n    editVal = async (table, target) => {\n        \n    }\n\n    delValue = async (table,target) => {\n        try {\n            await TmpDel(table,target);\n            await alert(`Wating for approve.`);\n            await Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});}\n            ).catch(err => {console.log(err);});\n        } catch (err){\n            alert(err);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Round />\n                <InputForm value={this.setValue}/>\n                <TableComp data={this.state.indexData} delValue={this.delValue} />\n            </div>\n        );\n    }\n}\n\nconst TableComp = props => {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>no.</th>\n                    <th>role</th>\n                    <th>name</th>\n                    <th>status</th>\n                    <th col={2}>action</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.data.map(\n                (res,index) => <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{res.dep_name}</td>\n                    <td>{res.name}</td>\n                    <td>{res.target_id ? <b>Request To Remove</b>:`available`}</td>\n                    <td>\n                        {\n                            res.target_id ?\n                            <button disabled>edit</button>:\n                            <button onClick={props.delValue.bind(this,`employee`,res.id)}>edit</button>\n                        }\n                    </td>\n                    <td>\n                        {\n                            res.target_id ?\n                            <button disabled>delete</button>:\n                            <button onClick={props.delValue.bind(this,`employee`,res.id)}>delete</button>\n                        }\n                    </td>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n}\n\nconst InputForm = props => {\n    const roleRef           = new useRef(null);\n    const nameRef           = new useRef(null);\n\n    const collectVal = async () => {\n        const dep_no    = roleRef.current.value;\n        const name      = nameRef.current.value;\n        if(name){\n            await props.value({name,dep_no});\n            nameRef.current.value = '';\n        }\n    } \n\n    return (\n        <div>\n            <input ref={nameRef} type={`text`} placeholder={`name`} />\n            <select ref={roleRef}>\n                <option value=\"1\">Manager</option>\n                <option value=\"2\">Helpdesk</option>\n            </select>\n            <input type={`submit`} onClick={collectVal} /> <br />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}