{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/code/pages/requestlist.js\";\nvar __jsx = React.createElement;\nimport Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn, AdminDel } from './component/dbComponent';\nexport default class RequestList extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      await this.getHead();\n      await this.reloadComponent();\n    });\n\n    _defineProperty(this, \"reloadComponent\", async () => {\n      const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     WHERE target_id IS NOT NULL;`;\n      const value = await RawQuery(sql);\n      return this.setState({\n        listItem: value\n      });\n    });\n\n    _defineProperty(this, \"getApprove\", async target => {\n      try {\n        await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n        await alert(`Request was rejected.`);\n        await this.reloadComponent();\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"getReject\", async target => {\n      try {\n        await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n        await alert(`Request was rejected.`);\n        await this.reloadComponent();\n      } catch (err) {\n        console.log(err);\n      }\n    });\n\n    _defineProperty(this, \"getHead\", async () => {\n      const colName = await TableColumn(`employee`);\n      return this.setState({\n        listHead: colName\n      });\n    });\n\n    this.state = {\n      listHead: [],\n      listItem: []\n    };\n    this.reloadComponent = this.reloadComponent.bind(this);\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Round, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(TableList, {\n      listItem: this.state.listItem,\n      getApprove: this.getApprove,\n      getReject: this.getReject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst TableList = props => {\n  return __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"name\"), __jsx(\"th\", {\n    colSpan: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"action\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.listItem.map((value, index) => __jsx(\"tr\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, value.name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: props.getApprove.bind(this, value.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Approve\"), __jsx(\"button\", {\n    onClick: props.getReject.bind(this, value.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Reject\"))))));\n};","map":{"version":3,"sources":["/code/pages/requestlist.js"],"names":["Round","React","Component","useRef","RawQuery","TableColumn","AdminDel","RequestList","constructor","getHead","reloadComponent","sql","value","setState","listItem","target","alert","err","console","log","colName","listHead","state","bind","render","getApprove","getReject","TableList","props","map","index","name","id"],"mappings":"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","sourcesContent":["import Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn, AdminDel } from './component/dbComponent';\n\n\nexport default class RequestList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     WHERE target_id IS NOT NULL;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getApprove = async (target) => {\n        try {\n            await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n            await alert(`Request was rejected.`);\n            await this.reloadComponent();\n        }catch (err){console.log(err)}\n    }\n\n    getReject = async (target) => {\n        try {\n            await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n            await alert(`Request was rejected.`);\n            await this.reloadComponent();\n        }catch (err){console.log(err)}\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Round />\n                <TableList \n                    listItem={this.state.listItem}\n                    getApprove={this.getApprove}\n                    getReject={this.getReject}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                    <th>name</th>\n                    <th colSpan=\"2\">action</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((value,index) => \n                    <tr key={index}>\n                        <td>{value.name}</td>\n                        <td>\n                            <button onClick={props.getApprove.bind(this,value.id)}>Approve</button>\n                            <button onClick={props.getReject.bind(this,value.id)}>Reject</button>\n                        </td>\n                    </tr>    \n                )}\n            </tbody>\n        </table>\n    );\n}"]},"metadata":{},"sourceType":"module"}