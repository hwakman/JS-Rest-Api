{"version":3,"file":"static/webpack/static/development/pages/requestlist.js.faaf7f4dbe8a46fe5719.hot-update.js","sources":["webpack:///./pages/requestlist.js"],"sourcesContent":["import Round from './component/roundLink';\nimport React, { Component, useRef } from 'react';\nimport { RawQuery, TableColumn, AdminDel } from './component/dbComponent';\n\n\nexport default class RequestList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listHead: [],\n            listItem: []\n        };\n        this.reloadComponent = this.reloadComponent.bind(this);\n    }\n\n    componentDidMount = async () => {\n        await this.getHead();\n        await this.reloadComponent();\n    }\n\n    reloadComponent = async () => {\n        const sql = `SELECT * FROM employee as em\n                     LEFT JOIN del_tmp as del \n                     ON del.table_name = 'employee'\n                     AND del.target_id = em.id\n                     WHERE target_id IS NOT NULL;`;\n        const value = await RawQuery(sql);\n        return this.setState({listItem:value});\n    }\n\n    getApprove = async (target) => {\n        const confirm = prompt(`please input \"Remove\" to confirm.`);\n        \n        if(confirm == 'Remove'){\n            try {\n                await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n                await AdminDel(`employee`, `id = '${target}'`);\n                await alert(`Request was Approved.`);\n                await this.reloadComponent();\n            }catch (err){console.log(err)}            \n        }\n    }\n\n    getReject = async (target) => {\n        try {\n            await AdminDel(`del_tmp`, `table_name = 'employee' AND target_id = '${target}'`);\n            await alert(`Request was rejected.`);\n            await this.reloadComponent();\n        }catch (err){console.log(err)}\n    }\n\n    getHead = async () => {\n        const colName = await TableColumn(`employee`);\n        return this.setState({listHead:colName});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Round />\n                <TableList \n                    listItem={this.state.listItem}\n                    getApprove={this.getApprove}\n                    getReject={this.getReject}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst TableList = props => {\n    return(\n        <table>\n            <thead>\n                <tr>\n                    <th>name</th>\n                    <th colSpan=\"2\">action</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {props.listItem.map((value,index) => \n                    <tr key={index}>\n                        <td>{value.name}</td>\n                        <td>\n                            <button onClick={props.getApprove.bind(this,value.id)}>Approve</button>\n                            <button onClick={props.getReject.bind(this,value.id)}>Reject</button>\n                        </td>\n                    </tr>    \n                )}\n            </tbody>\n        </table>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AANA;AAOA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAKA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtCA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5CA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;AA0CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA/DA;AACA;AADA;AACA;AAiEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAYA;;;;A","sourceRoot":""}