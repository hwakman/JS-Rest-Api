{"version":3,"file":"static/webpack/static/development/pages/index.js.1f84ac06a67db0aad049.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component, useRef } from 'react';\nimport { GetAll, AddOne, TableColumn, TmpDel } from './component/dbComponent';\nimport Link from 'next/link';\nimport Axios from 'axios';\n\nexport default class App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            indexData: []\n        }\n    }\n\n    componentDidMount() {\n        Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});console.log(res.data);}\n        ).catch(err => {console.log(err);});\n    }\n\n    setValue = async (data) => {\n        try {\n            await AddOne(`employee`,data);\n            await alert(`member name \"${data.name}\" has added.`);\n            await Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});}\n            ).catch(err => {console.log(err);});\n        }catch (err){\n            alert(err);\n        }\n    }\n\n    delValue = async (table,target) => {\n        try {\n            await TmpDel(table,target);\n            await alert(`Wating for approve.`);\n            await Axios.get('http://localhost:8080/').then(res => {this.setState({indexData:res.data});}\n            ).catch(err => {console.log(err);});\n        } catch (err){\n            alert(err);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <nav>\n                    <li><Link href=\"/index\"><a>home</a></Link></li>\n                    <li><Link href=\"/list\"><a>list</a></Link></li>\n                    <li><Link href=\"/requestlist\"><a>request list</a></Link></li>\n                </nav>\n                <InputForm value={this.setValue}/>\n                <TableComp data={this.state.indexData} delValue={this.delValue} />\n            </div>\n        );\n    }\n}\n\nconst TableComp = props => {\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>no.</th>\n                    <th>role</th>\n                    <th>name</th>\n                    <th>status</th>\n                    <th col={2}>action</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.data.map(\n                (res,index) => <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{res.dep_name}</td>\n                    <td>{res.name}</td>\n                    <td>{res.target_id ? <b>Request To Remove</b>:`available`}</td>\n                    <td>\n                        {\n                            res.target_id ?\n                            <button disabled>edit</button>:\n                            <button onClick={props.delValue.bind(this,`employee`,res.id)}>edit</button>\n                        }\n                    </td>\n                    <td>\n                        {\n                            res.target_id ?\n                            <button disabled>delete</button>:\n                            <button onClick={props.delValue.bind(this,`employee`,res.id)}>delete</button>\n                        }\n                    </td>\n                </tr>\n            )}\n            </tbody>\n        </table>\n    );\n}\n\nconst InputForm = props => {\n    const roleRef           = new useRef(null);\n    const nameRef           = new useRef(null);\n\n    const collectVal = async () => {\n        const dep_no    = roleRef.current.value;\n        const name      = nameRef.current.value;\n        if(name){\n            await props.value({name,dep_no});\n            nameRef.current.value = '';\n        }\n    } \n\n    return (\n        <div>\n            <input ref={nameRef} type={`text`} placeholder={`name`} />\n            <select ref={roleRef}>\n                <option value=\"1\">Manager</option>\n                <option value=\"2\">Helpdesk</option>\n            </select>\n            <input type={`submit`} onClick={collectVal} /> <br />\n        </div>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAOA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;;;AAwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA/CA;AACA;AADA;AACA;AAihBA;AAwsourceRoot":""}